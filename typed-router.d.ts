/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/activity-detail/': RouteRecordInfo<'/activity-detail/', '/activity-detail', Record<never, never>, Record<never, never>>,
    '/activity-detail/[id]': RouteRecordInfo<'/activity-detail/[id]', '/activity-detail/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/buy-confirm/': RouteRecordInfo<'/buy-confirm/', '/buy-confirm', Record<never, never>, Record<never, never>>,
    '/buy-result/': RouteRecordInfo<'/buy-result/', '/buy-result', Record<never, never>, Record<never, never>>,
    '/main': RouteRecordInfo<'/main', '/main', Record<never, never>, Record<never, never>, '/main/' | '/main/user'>,
    '/main/': RouteRecordInfo<'/main/', '/main', Record<never, never>, Record<never, never>>,
    '/main/user': RouteRecordInfo<'/main/user', '/main/user', Record<never, never>, Record<never, never>>,
    '/person-info/': RouteRecordInfo<'/person-info/', '/person-info', Record<never, never>, Record<never, never>>,
    '/select-location/': RouteRecordInfo<'/select-location/', '/select-location', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/activity-detail/index.vue': {
      routes: '/activity-detail/'
      views: never
    }
    'src/pages/activity-detail/[id].vue': {
      routes: '/activity-detail/[id]'
      views: never
    }
    'src/pages/buy-confirm/index.vue': {
      routes: '/buy-confirm/'
      views: never
    }
    'src/pages/buy-result/index.vue': {
      routes: '/buy-result/'
      views: never
    }
    'src/pages/main.vue': {
      routes: '/main' | '/main/' | '/main/user'
      views: 'default'
    }
    'src/pages/main/index.vue': {
      routes: '/main/'
      views: never
    }
    'src/pages/main/user.vue': {
      routes: '/main/user'
      views: never
    }
    'src/pages/person-info/index.vue': {
      routes: '/person-info/'
      views: never
    }
    'src/pages/select-location/index.vue': {
      routes: '/select-location/'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
